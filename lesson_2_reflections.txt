okay
This is lesson 2

creating it now for the sake of the exercise.

I'm learning now about the staging area.
This seems to be an intermediate step to decide what files will be commited to the repo.

I'm still not entirely sure how the staging area fits into everything just yet. 
Compared to our engineering workflow, perhaps a commit is a solid version, staging is 0.2 etc.

note: when prompted for the commit message in sublime: quit and the message will execute

If I make changes to a couple of classes
I could stage them one at a time to make sure that each change has a logical commit msg
This way 1 change = 1 commit message

branches are awesome!
I'm going move the master branch of Pitch perfect off to the side
Then I will add the button that plays reverb

Then I will branch again to make my ultimate version!
This will have some serious refactoring and experimenting. Sweet!

So, merging hey.
Seems a little optimistic. 
BUt I guess on large projects everyone would be moving incrementally.
Plus we would stop work when the merge breaks.

Still, if people did serious refactoring, you might have to throw out a whole branch!
Scary stuff. I think I'm down with this though.

Automatic merging. Convenient as long as there is pretty clear communication and open working styles.
I think that most of my engineering career will be useful with software development.
Two people arguing about whose commit is better. Good god. I have to NOT be that guy.